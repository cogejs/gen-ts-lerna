---
to: package.json
---
{
  "name": "<%- name %>",
  "version": "0.1.0",
  "description": "<%- description %>",
  "private": true,
  "engines": {
    "node": ">=14"
  },
  "author": "<%- owner %>",
  "license": "<%- license %>",
  "scripts": {
    "bootstrap": "lerna bootstrap",
    "postinstall": "husky install && npm run -s bootstrap && npm run -s update-ts-project-refs",
    "update-ts-project-refs": "nb-update-ts-project-refs",
    "update-packages": "npm run -s update-package-locks",
    "prerelease": "npm run build:full && cross-env CI=1 npm run jest && npm run lint",
    "release": "cross-env CI=1 lerna version && lerna publish from-git --yes",
    "update-package-locks": "nb-rebuild-package-locks",
    "update-package-deps": "nb-update-package-deps",
    "update-all-deps": "npm update && lerna exec -- npm update && npm run update-package-locks",
    "version": "npm run update-package-deps",
    "outdated": "npm outdated --depth 0 && lerna exec --no-bail \"npm outdated --depth 0\"",
    "lint": "npm run eslint",
    "lint:fix": "npm run eslint:fix",
    "eslint": "nb-eslint --report-unused-disable-directives --cache .",
    "eslint:fix": "npm run eslint -- --fix",
    "prettier:cli": "nb-prettier \"**/*.ts\" \"**/*.js\" \"**/*.md\"",
    "prettier:check": "npm run prettier:cli -- --check",
    "prettier:fix": "npm run prettier:cli -- --write",
    "clean": "lerna run clean && nb-clean \"packages/*/dist\"",
    "clean:lerna": "lerna clean",
    "build": "nb-tsc -b",
    "build:full": "npm ci --ignore-scripts && lerna bootstrap --ci && npm run clean && npm run build",
    "pretest": "npm run clean && npm run build",
    "test": "npm run jest",
    "test:ci": "jest --collectCoverage --coverageDirectory=\"./coverage\" --reporters=default --reporters=jest-junit --watchAll=false",
    "jest": "jest",
    "posttest": "npm run lint"
  },
  "dependencies": <%- h.stringify(dependencies, 2, 2, 1) %>,
  "devDependencies": <%- h.stringify(devDependencies, 2, 2, 1) %>,
  "husky": {
    "hooks": {
      "commit-msg": "commitlint -E HUSKY_GIT_PARAMS",
      "pre-commit": "if-env LINT_STAGED=0 && echo \"lint-staged disabled via LINT_STAGED env var\" || lint-staged"
    }
  },
  "config": {
    "commitizen": {
      "path": "./node_modules/cz-conventional-changelog"
    }
  }
}

